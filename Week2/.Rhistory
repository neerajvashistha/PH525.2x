data(airquality)
mean(airquality$temp)
mean(airquality$temp,na.rm=T)
mean(airquality$temp,na.rm=F)
mean(airquality$temp,na.rm=T)
mean(airquality$temp,na.rm=TRUE)
head(airquality)
mean(airquality$Temp,na.rm=TRUE)
mean[,airquality$Month==6](airquality$Temp,na.rm=TRUE)
mean(subset(airquality,subset = airquality$Month==6,select = airquality$Temp),na.rm=T)
mean(subset(airquality,airquality$Month==6,select = airquality$Temp),na.rm=T)
mean(subset(airquality,airquality$Month==6,select = airquality$Temp),na.rm=T)
mean(airquality$Temp[airquality$Month==6])
?par
setwd("~/data")
setwd("~/")
pol<-read.csv("data/avgpm25.csv",colClasses=c("numeric","character","factor","numeric","numeric"))
par(mfrow = c(2,1),mar=c(4,4,2,1))
hist(subset(pol,region=="east")$pm25,col="green")
hist(subset(pol,region=="west")$pm25,col="green")
hist(subset(pol,region=="south")$pm25,col="green")
par(mfrow = c(1,1),mar=c(4,4,2,1))
hist(subset(pol,region=="south")$pm25,col="green")
hist(subset(pol,region=="east")$pm25,col="green")
par(mfrow = c(2,1),mar=c(4,4,2,1))
hist(subset(pol,region=="east")$pm25,col="green")
hist(subset(pol,region=="west")$pm25,col="green")
par(mfrow = c(2,2),mar=c(4,4,2,1))
hist(subset(pol,region=="east")$pm25,col="green")
hist(subset(pol,region=="west")$pm25,col="green")
hist(subset(pol,region=="west")$pm25,col="red")
hist(subset(pol,region=="west")$pm25,color="red")
hist(subset(pol,region=="east")$pm25,col="blue")
?with
setwd("~/")
pwd
getwd()
source("submitscript1.R")
source("submitscript1.R")
submit()
submit()
submit()
source("polluntantmean.R")
submit()
submit()
source('~/polluntantmean.R')
submit()
source("pollutantmean.R")
source("submitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('~/corr.R')
source("complete.R")
cr<-corr("specdata",150)
head(cr)
summary(cr)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?xyplot
?xyplot()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
nlme
bodyweight
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(dataset)
library(datasets
)
str(maaCS)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print p
print(p)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
set.seed(1234)
par(mar=c(0,0,0,0))
x<-rnorm(12,mean=rep(1:3,each=4),sd=0.2)
x
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
y
plot(x,y,col="blue",pch=19,cex=2)
text(x+0.05,y+0.05,labels=as.character(1:12))
dataFrame<-data.frame(x,y)
dist(dataframe,method = "manhatten")
dist(dataframe,method = "manhattan")
dist(dataFrame,method = "manhattan")
distxyM<-dist(dataFrame,method = "manhattan")
hclustering<-hclust(distxyM)
plot(hclustering)
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
?rnorm
example(rnorm)
example(rnorm)
source('D:/files/thebrearer/Coursera/rankhospital.r')
install.packages("gapminder")
install.packages("gapminder")
install.packages("gapminder")
install.packages("C:\\Users\\BlackFury\\Downloads\\gapminder_0.1.0.tar.gz", repos = NULL, type = "source")
library(gapminder)
data(gapminder)
head(gapminder)
View(gapminder)
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite()
biocLite(c("GenomicFeatures", "AnnotationDbi"))
y<-rnorm(1e6)
x<-cbind(rep(1,1e6),rep(0,1,each=5e5))
View(x)
system.time({sum((y-x %*% beta)^2)})
beta<-c(1,1)
system.time({sum((y-x %*% beta)^2)})
system.time({sum((y-x %*% beta)^2)})
system.time({sum((y-x %*% beta)^2)})
y<-rnorm(1e6)
x<-cbind(rep(1,1e6),rep(0,1,each=5e5))
beta<-c(1,1)
system.time({sum((y-x %*% beta)^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
y<-rnorm(1e6)
x<-cbind(rep(1,1e6),rep(0,1,each=5e5))
beta<-c(1,1)
system.time({sum((y-x %*% beta)^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
y<-rnorm(1e6)
x<-cbind(rep(1,1e6),rep(0,1,each=5e5))
beta<-c(1,1)
system.time({sum((y-x %*% beta)^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
y<-rnorm(1e6)
x<-cbind(rep(1,1e6),rep(0,1,each=5e5))
beta<-c(1,1)
system.time({sum((y-x %*% beta)^2)})
system.time({sum(sapply(seq_along(y),
function(i) y[i] - x[i,1] * beta[1] -x[i,2] *beta[2])^2)})
sum((y-x %*% beta)^2)
source('~/.active-rstudio-document', echo=TRUE)
X<-c(x)
Y<-c(y)
mean( (Y - mean(Y))*(X-mean(X) ) )
Y - mean(Y)
X-mean(X)
(Y - mean(Y))*(X-mean(X) )
mean( (Y - mean(Y))*(X-mean(X) ) )
source('~/.active-rstudio-document', echo=TRUE)
library(UsingR)
x = father.son$fheight
y = father.son$sheight
n = length(y)
N = 50
set.seed(1)
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat = lm(y~x)$coef
SE(betahat) = sqrt(var(betahat))
SE(betahat) = sqrt(var(betahat))
X = cbind(rep(1,nx + ny),rep(c(0,1),c(nx, ny)))
nx<-sample(5)
ny<-sample(7)
X = cbind(rep(1,nx + ny),rep(c(0,1),c(nx, ny)))
X
t(X)%*%X
nx<-sample(5,c(0,1))
nx
f <- factor(rep(c("X","Y"), c(nx, ny)))
?sample
sample(0,size = 5)
sample(0,size = 5,replace=T)
nx<-sample(0,size = 5,replace=T)
ny<-sample(1,size = 7,replace=T)
f <- factor(rep(c("X","Y"), c(nx, ny)))
f <- factor(rep(c("X","Y"), c(5, 7)))
f
t(x)%*%X
species <- factor(c("A","A","B","B"))
condition <- factor(c("control","treated","control","treated"))
model.matrix(~ species + condition)
library(contrast)
install.packages("contrast")
install.packages("polspline")
install.packages("polspline")
install.packages("rms")
install.packages("rms")
install.packages("rms")
setwd("~/PH525.2x/Week2")
install.packages("contrast")
filename <- "spider_wolff_gorb_2013.csv"
spider <- read.csv(filename, skip=1)
boxplot(spider$friction ~ spider$type * spider$leg,
col=c("grey90","grey40"), las=2,
main="Comparison of friction coefficients of different leg pairs ")
X <- model.matrix(~ type + leg, data=spider)
filename <- "spider_wolff_gorb_2013.csv"
spider <- read.csv(filename, skip=1)
View(spider)
X <- model.matrix(~ type + leg, data=spider)
X
fit <- lm(friction ~ type+leg, data=spider.sub)
fit <- lm(friction ~ type+leg, data=spider)
L3vsL2 <- contrast(fit,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
library(contrast)
L3vsL2 <- contrast(fit,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
L3vsL2
fit <- lm(friction ~ type+leg, data=spider)
L3vsL2 <- contrast(fit,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
(L3vsL2 <- contrast(fit,list(leg="L4",type="pull"),list(leg="L2",type="pull")))
C <- matrix(c(0,0,-1,0,1),1,5)
(C <- matrix(c(0,0,-1,0,1),1,5))
Sigma
Sigma <- sum(fitTL$residuals^2)/(nrow(X) - ncol(X)) * solve(t(X) %*% X)
sqrt(Var(beta-hat_L4 - beta-hat_L2)) #=
fitTL <- lm(log2friction ~ type + leg, data=spider)
fit <- lm(friction ~ type + leg, data=spider)
betahat <- coef(fit)
Y <- matrix(spider$friction, ncol=1)
X <- model.matrix(~ type + leg, data=spider)
QR <- qr(X)
(Q <- qr.Q( QR ))[1,1]
(R <- qr.R( QR ))[1,1]
(crossprod(Q,Y))[1,1]
(betahat <- backsolve(R, crossprod(Q,y) ) )
(betahat <- backsolve(R, crossprod(Q,Y) ) )
